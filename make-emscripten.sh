#!/bin/bash

EMMAKE=emmake
EMCC=emcc
NODE=node

if [ ! -d "../minisat" ]; then
    echo "Please clone the meteor/minisat repo in the same directory as the meteor/minisatp repo and check out the 'emscripten' branch."
    exit 1
fi

echo "Building"

mkdir -p build
rm -rf build/release/*
$EMMAKE make r
pushd build/release/bin
ln -s minisatp minisatp.bc
# flags reference: http://kripken.github.io/emscripten-site/docs/tools_reference/emcc.html
$EMCC -O3 --memory-init-file 0 --pre-js ../../../emscripten-preamble.js --post-js ../../../emscripten-postamble.js -s EXPORTED_FUNCTIONS='["_yo", "_unyo", "_freeBytes", "_eightQueens", "_countLines", "_addClause", "_solve", "_getNumVariables", "_getVariableIndex", "_getVariableAtIndex", "_getSolution", "_createTheSolver", "_addConstraint", "_addConstraintConditional", "_solveAgain", "_flushConstraintsAfterSolve", "_flushConstraintsConditional", "_setDebugLogNewClauses", "_incrementalSolveTest"]' -s TOTAL_MEMORY=67108864 -s NO_BROWSER=1 -s NO_FILESYSTEM=1 -s NO_DYNAMIC_EXECUTION=0 minisatp.bc -o minisatp.js
popd

( echo "// This file is generated by the meteor/minisatp repo." ; \
    sed -e '/^\/\/ EMSCRIPTEN_END_FUNCS/r emscripten-midamble.js' \
    build/release/bin/minisatp.js ) >build/minisatp.js

echo "Testing"
$NODE test.js
